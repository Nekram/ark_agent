{"name":"Ark Agent","tagline":"Distributed Agent  Used To Collect Current  and Historical  End Of Day Stock Data ","body":"Ark Agent\r\n=====================\r\n\r\nAn application that leverages [Celery][2] and [MongoDB][3] to provide end of day and historical market data for stocks. \r\n\r\n----------\r\nUse Cases\r\n---------\r\n\r\n**Ark Agent** can be used for any one of the following and much more:. \r\n\r\n - Market Analytics\r\n - Indicator Development\r\n - Strategy Development and Backtesting\r\n - More ....\r\n\r\n\r\n----------\r\nFunctionality\r\n---------\r\n\r\n**Ark Agent** automatically obtains and stores historical market data using Yahoo as the main source . \r\n\r\n - Retroactively obtains and seeds the database with historical data for all enabled symbols\r\n - Configurable schedule that runs automatically to obtain end of day data. Currently configured for 7:00 PM EST\r\n - Tracks the status of obtaining each symbol and will obtain data from the date of last failure.\r\n\r\n \r\n> - Obtains current and historical data for the entire **S&P 500** in under **15 minutes**.\r\n\r\n\r\n----------\r\n\r\nConfiguration\r\n---------------\r\n\r\n**Ark Agent** has requires minor configuration to get started\r\n\r\n> **NOTE:**\r\n> \r\n> - Ensure **mongo** is in your path or update scripts\r\n> - Setup additional indices depending on how you query the data\r\n\r\n\r\n#### 1. Download and Configure MongoDB\r\n\r\nUsing MongoDB's nice documentation [MongoDB][1]\r\n\r\n#### 2. Install Python dependencies\r\n\r\n    pip install celery pymongo ystockquote finsymbols pyyaml\r\n\r\n\r\n#### 3. Start MongoDB and Worker\r\n\r\n 1. Start MongoDB \r\n 2. Run script to configure indices ```./setup_mongo_indices.sh```\r\n\r\n#### 4. Start Worker(s)\r\n\r\nCelery will automatically select the number of workers to be created. Usually 1 worker per core is created.\r\n\r\n```\r\ncelery worker --app ark_agent -l info -E -B\r\n```\r\n\r\n#### 4. Sit back , relax and collect end of day data\r\n \r\n\r\n----------\r\nDocument Structure\r\n--------------\r\n\r\n### eod_data collection  \r\n\r\n```\r\nMongoDB shell version: 2.6.0\r\nconnecting to: test\r\n> use stocks\r\nswitched to db stocks\r\n> db.eod_data.find({symbol:'GOOG'}).pretty()\r\n{\r\n\t\"_id\" : ObjectId(\"539c776b3973b0db2be18265\"),\r\n\t\"price_data\" : {\r\n\t\t\"Volume\" : 1900300,\r\n\t\t\"High\" : 532.93,\r\n\t\t\"AdjClose\" : 531.35,\r\n\t\t\"Low\" : 523.88,\r\n\t\t\"Close\" : 531.35,\r\n\t\t\"Open\" : 527.11\r\n\t},\r\n\t\"date\" : ISODate(\"2014-05-01T00:00:00Z\"),\r\n\t\"symbol\" : \"GOOG\"\r\n}\r\n{\r\n\t\"_id\" : ObjectId(\"539c776b3973b0db2be18266\"),\r\n\t\"price_data\" : {\r\n\t\t\"Volume\" : 1348000,\r\n\t\t\"High\" : 563.6,\r\n\t\t\"AdjClose\" : 560.55,\r\n\t\t\"Low\" : 557.9,\r\n\t\t\"Close\" : 560.55,\r\n\t\t\"Open\" : 560.51\r\n\t},\r\n\t\"date\" : ISODate(\"2014-06-10T00:00:00Z\"),\r\n\t\"symbol\" : \"GOOG\"\r\n}\r\n```\r\n\r\n### load_status collection  \r\n```\r\nType \"it\" for more\r\n> db.load_status.find({symbol:'GOOG'}).pretty()\r\n{\r\n\t\"_id\" : ObjectId(\"539c776b3973b0db2be18264\"),\r\n\t\"symbol\" : \"GOOG\",\r\n\t\"load_status\" : {\r\n\t\t\"last_run_success_date\" : \"2014-06-14\",\r\n\t\t\"last_run_status\" : \"success\",\r\n\t\t\"initial\" : false,\r\n\t\t\"last_run_date\" : \"2014-06-14\"\r\n\t}\r\n}\r\n```\r\n\r\n\r\n----------\r\n\r\nArchitecture\r\n-----------\r\n\r\nBy default **Ark Agent** uses **MongoDB** as both the messaging system and the datastore. Ideally you would like to seperate these functionality and possibly use a broker like **RabbitMQ** to seperate the data collection and cleaning components from the datababase. **Ark Agent** can be easily modified to do the above. The current setup was chosen to allow for others to quickly get started.\r\n\r\nBase Architecture\r\n\r\n![](https://github.com/skillachie/ark_agent/raw/master/images/architecture1.png)\r\n\r\n\r\n----------\r\nIssues/Help\r\n---------\r\n\r\nFeel free to open a pull request or send me an email dwaynecampbell13@gmail.com\r\n\r\n\r\n  [1]: http://docs.mongodb.org/manual/installation/\r\n  [2]: http://www.celeryproject.org/ \r\n  [3]: http://www.mongodb.org/\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}